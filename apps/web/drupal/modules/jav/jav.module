<?php
/**
 * @file
 * A module that creates blocks for JAV.
 */

/**
 * Implements hook_help().
 *
 * Displays help and module information.
 *
 * @param path
 *   Which path of the site we're using to display help
 * @param arg
 *   Array that holds the current path as returned from arg() function
 */
function jav_help($path, $arg)
{
    switch ($path) {
        case "admin/help#jav":
            return '<p>' . t("Manage JAV data.") . '</p>';
            break;
    }
}

/**
 * Implements hook_block_info().
 */
function jav_block_info()
{
    $blocks = array();
    $blocks['rtsingle'] = array(
        // The name that will appear in the block list.
        'info' => t('JAV Tracking'),
        // Default setting.
        'cache' => DRUPAL_CACHE_PER_ROLE,
        //'cache' => DRUPAL_CACHE_GLOBAL,
    );
    $blocks['rtmulti'] = array(
        'info' => t('JAV Tracking All'),
        'cache' => DRUPAL_CACHE_PER_ROLE,
    );
    $blocks['eventlist_all'] = array(
        'info' => t('JAV Events'),
        'cache' => DRUPAL_CACHE_PER_ROLE,
    );
    $blocks['eventlist_single'] = array(
        'info' => t('JAV Lift Events'),
        'cache' => DRUPAL_CACHE_PER_ROLE,
    );
    $blocks['sensor_status'] = array(
        'info' => t('JAV Sensor Status'),
        'cache' => DRUPAL_CACHE_PER_ROLE,
    );
    $blocks['reports'] = array(
        'info' => t('JAV Reports'),
        'cache' => DRUPAL_CACHE_PER_ROLE,
    );
    return $blocks;
}

/**
 * Implements hook_permission().
 */
function jav_permission()
{
    return array(
        'access jav content' => array(
            'title' => t('Access content for the jav module'),
        )
    );
}

function jav_init()
{
    // Any init code goes here. eg. drupal_add_js.
    if (($lib_avail = libraries_detect('datatables')) && !empty($lib_avail['installed'])) {
        // The library is installed. 
        //dpm($lib_avail);
    } else {
        // Something went wrong. :(
        print_r("Error: Library datatables is not installed</br>");
        // This contains a short status code of what went wrong, such as 'not found'.
        $error = $lib_avail['error'];
        // This contains a detailed (localized) error message.
        $error_message = $lib_avail['error message'];
        print_r($error_message);
    }

// Try to load the library and check if that worked.
    if (($lib_load = libraries_load('datatables')) && !empty($lib_load['loaded'])) {
        //dpm($lib_load);
        // Do something with the library here.
        //print_r("Library datatables loaded.");
    } else {
        print_r("Error: Library datatables is not loaded.");
    }

    drupal_add_js(drupal_get_path('module', 'jav') . '/jav.js');
    drupal_add_js(drupal_get_path('module', 'jav') . '/jav_reports.js');
    drupal_add_js('https://cdn.datatables.net/buttons/1.5.1/js/dataTables.buttons.min.js', 'external');
    drupal_add_js('https://cdn.datatables.net/buttons/1.5.1/js/buttons.flash.min.js', 'external');
    drupal_add_js('https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js', 'external');
    drupal_add_js('https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.32/pdfmake.min.js', 'external');
    drupal_add_js('https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.32/vfs_fonts.js', 'external');
    drupal_add_js('https://cdn.datatables.net/buttons/1.5.1/js/buttons.html5.min.js', 'external');
    drupal_add_js('https://cdn.datatables.net/buttons/1.5.1/js/buttons.print.min.js', 'external');
    drupal_add_js('https://code.jquery.com/ui/1.12.1/jquery-ui.js', 'external');
    drupal_add_js('https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.22.0/moment.js', 'external');
    drupal_add_js(drupal_get_path('module', 'jav') . '/bootstrap-datetimepicker.js');
    drupal_add_css(drupal_get_path('module', 'jav') . '/bootstrap-datetimepicker.css');
    drupal_add_js(drupal_get_path('module', 'jav') . '/jquery.dataTables.yadcf.js');
    drupal_add_css(drupal_get_path('module', 'jav') .'/jquery.dataTables.yadcf.css');
    //drupal_add_css(drupal_get_path('module', 'jav') .'/your-css.css');
    //drupal_add_css(drupal_get_path('theme', 'hdbjav') .'/your-css.css');
}

/**
 * Implements hook_libraries_info().
 */
function jav_libraries_info()
{
    $libraries = array();

    // TODO: How to handle if the library is missing?
    //
    if (($library_path = libraries_get_path('moment'))) {
        //print_r("Moment lib path OK.");
        $libraries['moment'] = array(
            'name' => 'Moment JS',
            'vendor url' => 'http://momentjs.com/',
            'download url' => 'http://momentjs.com/downloads/moment.js',
            'version callback' => 'jav_short_circuit_version',
            'files' => array(
                'js' => array(
                    'moment.min.js',
                ),
            ),
        );
    }
    if (($library_path = libraries_get_path('daterangepicker'))) {
        //print_r("Daterange lib path OK.");

        $libraries['daterangepicker'] = array(
            'library path' => $library_path,
            'name' => 'Daterange Picker',
            'vendor url' => 'http://www.daterangepicker.com/',
            'download url' => 'https://github.com/dangrossman/bootstrap-daterangepicker/archive/master.zip',
            'version callback' => 'jav_short_circuit_version',
            'files' => array(
                'js' => array(
                    'daterangepicker.js',
                ),
                'css' => array(
                    'daterangepicker.css',
                ),
            ),
            'dependencies' => array(
                'moment',
            ),
        );
    }
    if (($library_path = libraries_get_path('leaflet'))) {
        $libraries['leaflet'] = array(
            //'title' => 'Vertical Tabs',
            //'website' => 'http://drupal.org/node/323112',
            'name' => 'Leaflet',
            'vendor url' => 'http://www.leaflet.com/',
            'download url' => 'http://www.leaflet.com/download',
            /*
            // TODO: automatically get version number from Changelog or readme.
            'version arguments' => array(
            'file' => 'highcharts.js',
            // jQuery FlexSlider v2.1
            'pattern' => '/Highcharts v(\d+\.+\d+)/',
            'lines' => 2,
          ),
          */
            'version callback' => 'jav_short_circuit_version',
            'files' => array(
                'js' => array(
                    'leaflet.js',
                    //'fs/Control.FullScreen.js',
                    //'leaflet-fullscreen/Leaflet.fullscreen.js',
                    //'snake/L.Polyline.SnakeAnim.js',
                    //'playback/LeafletPlayback.js',
                    //'beautify/leaflet-beautify-marker-icon.js',
                    //'beautify/leaflet-beautify-marker.js',
                ),
                'css' => array(
                    'leaflet.css' => array(),
                    //'fs/Control.FullScreen.css' => array(),
                    //'leaflet-fullscreen/leaflet.fullscreen.css' => array(),
                    //'beautify/leaflet-beautify-marker-icon.css' => array(),
                ),
            ),
        );
    }
    if (($library_path = libraries_get_path('datatables'))) {
        $libraries['datatables'] = array(
            'name' => 'Datatables',
            'vendor url' => 'http://www.datatables.net/',
            'download url' => 'http://www.datatables.net/download',
            'version callback' => 'jav_short_circuit_version',
            'files' => array(
                'js' => array(
                    'media/js/jquery.dataTables.js',
                    'media/js/dataTables.bootstrap.js',
                ),
                'css' => array(
                    //'jquery.dataTables.css' => array(),
                    'media/css/dataTables.bootstrap.css' => array(),
                ),
            ),
        );
    }
    //print_r($libraries);
    return $libraries;
}

/**
 * Short-circuit the version argument.
 */
function jav_short_circuit_version()
{
    return TRUE;
}

/**
 * Implements hook_menu().
 */
function jav_menu()
{
    $items = array();

    // Provide configuration options for the module from Admin page.
    $items['admin/config/content/jav'] = array(
        'title' => 'JAV',
        'description' => 'Configuration for JAV module',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('jav_admin_config'),
        'access arguments' => array('access administration pages'),
        'file' => 'jav.admin.inc',
        'type' => MENU_NORMAL_ITEM,
    );
    $items['jav'] = array(
        'title' => 'Real time updates',
        'page callback' => '_jav_page',
        'access arguments' => array('access jav content'),
        //Will appear in Navigation menu.
        'type' => MENU_NORMAL_ITEM,
    );
    $items['jav/get'] = array(
        'title' => 'Real time updates',
        'page callback' => '_get_json',
        //'page arguments' => array(1), //get param from URL.
        'access arguments' => array('access jav content'),
        'file' => 'jav.svcjson.inc',
        'type' => MENU_CALLBACK,
    );
    return $items;
}

function _jav_page()
{
    $items = array();
    //return "Hello There!";
    return $items;
}

/**
 * Implements hook_node_insert().
 *
 * As a new node is being inserted into the database, we need to do our own
 * database inserts.
 */
function jav_node_insert($node)
{
    // Action for node creation same as node update.
    //jav_node_update($node);
    //if ($node->type == 'stations' && !isset($node->nid)) {
    if ($node->type == 'lifts') {
        $flag = true;
        _lift_details_to_db($node, $flag);
    }
    // Notice that we are ignoring any revision information using $node->nid
}

/**
 * Implements hook_node_update().
 *
 * As an existing node is being updated in the database, we need to do our own
 * database updates.
 *
 * This hook is called when an existing node has been changed.
 */
function jav_node_update($node)
{
    if ($node->type == 'lifts') {
        $flag = false;
        _lift_details_to_db($node, $flag);
    }
    if ($node->type == 'lift_companies') {
	 $flag = false;
        _update_db_referencing_lifts($node, $flag);
    }
}


function _lift_details_to_db($node, $flag)
{
	//$ref = $node->get($field_lift_supplier)->referencedEntities();
	//$view = node_view($node);
        $lift_nid = $node->nid;
        $lift_id = $node->field_lift_id['und'][0]['value'];
	$tid_supplier = $node->field_lift_supplier['und'][0]['target_id'];
	$node_supplier = node_load($tid_supplier);
	$supplier_nid = $node_supplier->nid;
	$sms_list = $node_supplier->field_sms_nums2['und'][0]['value'];
	dpm($sms_list);
        //$flag = false;
        module_load_include("config.inc", "jav");
        $jav_db = getExtDBConfig();
        module_load_include("api.inc", "jav");
        _update_ext_db($jav_db, $lift_nid, $lift_id, $supplier_nid, $sms_list, $flag);
}

function _update_db_referencing_lifts($node_supplier, $flag)
{
	$supplier_nid = $node_supplier->nid;
	$sms_list = $node_supplier->field_sms_nums2['und'][0]['value'];
	// Get all lifts referencing to this node entity.
        module_load_include("config.inc", "jav");
        $jav_db = getExtDBConfig();
        module_load_include("api.inc", "jav");
	$results = _get_ext_db_liftlist($jav_db, $supplier_nid);
	$liftlist = array();
	foreach($results as $row) {
	    $lift_id = $row->lift_id;
	    $lift_nid = intval($row->lift_nid);
	    $supplier_nid = intval($row->supplier_nid);
	    $liftlist = $lift_id;
            _update_ext_db($jav_db, $lift_nid, $lift_id, $supplier_nid, $sms_list, $flag);
	}
}

/**
 * http://willvincent.com/blog/building-custom-realtime-chat-module-drupal-7-part-3
 *
 * Implements hook_theme().
 */

/**
 * Implements hook_block_view().
 *
 * Prepares the contents of the block.
 */
function jav_block_view($delta = '')
{
    // For the case of block added to a View.
    //$view_1 = views_get_view('dashboard');
    //$info = views_embed_view('dashboard');
    // Get the list of lifts based on the active view.
    $dev_list = _jav_set_list();
    //$dev_list = drupal_static('jav');
    //dpm($this);
    //dpm($dev_list);
    //print_r($dev_list);
    $sid_list = array();
    if($dev_list) {
        foreach($dev_list as $key => $value) {
        //foreach($dev_list as $dev) {
            //dpm($dev);
            //print_r($dev["sid"]);
            $sid_list[] = $key;
        }
    }
    $block = array();
    // TODO: exit if it is not a node but a view or something else. But should allow selected views.
    // TODO: Move this to init? For the case of view this happens outside.
    $mpath = drupal_get_path('module', 'jav');

    // For the case of block added to a Node.
    if ($node = menu_get_object()) {
        // TODO: if($node) {}
        if ($node->type == 'lifts') {
            //dpm($node);
            $nid = $node->nid;
            // Always read these fields in English.
            $field_dev = field_get_items('node', $node, 'field_lift_id', 'en');
            $sid = $field_dev[0]['safe_value'];
            //$vnum = -1;
            //dpm($field_dev);
        } // if node-type.
        else {
            $sid = "Unknown";
        }
    } // if node.
    else {
        $sid = "Unknown";
        //$vnum = -1;
    }

    // Always pass as an array of values, for generic handling at JS side.
    if($sid) {
        $sid_list[] = $sid;
    }
    //$sid = (string)$sid_tmp;

    switch ($delta) {
        /*
        * The real time block may appear in a page that shows all items or on a page that
        * shows single item. Create a filter to reflect this context. The filter can be
        * presented as a JSON, where some parameters may be missing, if some fields on the page
        * is missing (eg. sensor_id).
        */
        case 'rtsingle':
            // Pass any node related parameters here, which can then be used by the JS during Ajax.
            // Here will be an array that contains the filter values.
            // if(isset($sid)) {
            // vnum/sid list.
            $block['subject'] = t('Location...');
            if (user_access('access content')) {
                $block['content']['#markup'] = "<div id='rt_map'>Map will display here.....</div>";
            }
            $block['content']['#attached']['libraries_load'][] = array('leaflet');
            // If not in libraries directory,
            //$block['content']['#attached']['library'][] = array('system','ui.droppable');
            $block['content']['#attached']['js'] = array(
                array(
                    'type' => 'file',
                    'data' => $mpath . '/jav_rt.js',),
                array(
                    'type' => 'setting',
                    'data' => array(
                        'rt' => array(
                            'veh_list' => array(
                                $sid => array(
                                    'sid' => $sid,
                                    'nid' => $nid,
                                    'vnum' => $vnum
                                ),
                            ),
                        ),
                    ),
                )
            );
            break;
        case 'rtmulti':
            // Only appears in a view.
            // TODO: What if this block is enabled for a node?
            // TODO: nidList already set in the view preprocess.
            //drupal_add_js(array('rt' => array('vtype' => 'car')), 'setting');
            if (user_access('access content')) {
                //$block['content']['#markup'] = "<div id='show_report'>Map will display here.....</div>";
                $block = array
                (
                    'subject' => t('JAV Locations...'),
                    'content' => array
                    (
                        'rtmulti_block' => array
                        (
                            '#prefix' => "<div id='rt_map'>",
                            '#suffux' => "</div>",
                            '#markup' => t("Map will display here....."),
                        ),
                    ),
                );
            }
            $block['content']['#attached']['libraries_load'][] = array('leaflet');
            $block['content']['#attached']['js'] = array(
                array(
                    'type' => 'file',
                    'data' => $mpath . '/jav_rt.js',),
            );
            break;
        case 'eventlist_all':
            $block['content']['#attached']['js'] = array(
                array(
                    'type' => 'file',
                    'data' => $mpath . '/jav.js',),
            );
            if (user_access('access content')) {
                $block = array
                (
                    'subject' => t('Lift Events'),
                    'content' => array
                    (
                        'eventlist_block' => array
                        (
                            '#prefix' => "<div id='rt_map'>",
                            '#suffux' => "</div>",
                            '#markup' => t("Event table....."),
                        ),
                    ),
                );
               
                $header = array(
                    //array('data' => t('Time'), 'field' => 'id', 'sort' => 'desc'),
                    array('data' => t('Date Time')),
                    //array('data' => t('Address'), 'colspan' => 3),
                    array('data' => t('Lift SNUM')),
                    array('data' => t('Lift Location')),
                    array('data' => t('Event Type')),
                    array('data' => t('Remarks')),
                );

                $reqtype = 'rt';
                $filter = new stdClass(); // (object) [];
                $filter->start = -1;
                $filter->end = -1;
                $filter->sidList = $sid_list;
                //$filter->sidList = ['112233C'];
                //
                module_load_include("config.inc", "jav");
                $jav_db = getExtDBConfig();
                module_load_include("api.inc", "jav");
                $result = _getdata_exdb($jav_db, $reqtype, $filter);
                //dpm($result);
                date_default_timezone_set('Asia/Singapore');
                //
                $items = array();
                foreach ($result as $row) {
                    $date = new DateTime();
                    $date->setTimestamp(intval($row->ts)/1000);
                    $dtime = $date->format('j-M-y g:i a');
                    //print_r($dtime, $row->snum);
                    $items[] = array($dtime, $row->snum, '510 Bt Batok St 22', $row->etype, $row->remarks);
                }
                //dpm($items);


                $block['content'] = theme('table', array('header' => $header, 'rows' => $items, 'attributes' => array('id' => 'sort-table')));

            } // if user_access
            break;
        case 'eventlist_single':
            $block['content']['#attached']['js'] = array(
                array(
                    'type' => 'file',
                    'data' => $mpath . '/jav.js',),
            );
            if (user_access('access content')) {
                $block = array
                (
                    'subject' => t('Lift Events'),
                    'content' => array
                    (
                        'eventlist_block' => array
                        (
                            '#prefix' => "<div id='rt_map'>",
                            '#suffux' => "</div>",
                            '#markup' => t("Event table....."),
                        ),
                    ),
                );
               
                $header = array(
                    //array('data' => t('Time'), 'field' => 'id', 'sort' => 'desc'),
                    array('data' => t('Date Time')),
                    //array('data' => t('Address'), 'colspan' => 3),
                    array('data' => t('Lift ID')),
                    array('data' => t('Lift Location')),
                    array('data' => t('Event Type')),
                    array('data' => t('Remarks')),
                );

                $reqtype = 'trc';
                $filter = new stdClass(); // (object) [];
                $filter->start = -1;
                $filter->end = time() * 1000;
                $filter->sidList = $sid_list;
                //$filter->sidList = ['112233C'];
                //
                module_load_include("config.inc", "jav");
                $jav_db = getExtDBConfig();
                module_load_include("api.inc", "jav");
                $result = _getdata_exdb($jav_db, $reqtype, $filter);
                //dpm($result);
                date_default_timezone_set('Asia/Singapore');
                //
                $items = array();
                foreach ($result as $row) {
                    $date = new DateTime();
                    $date->setTimestamp(intval($row->ts)/1000);
                    $dtime = $date->format('j-M-y g:i a');
                    //print_r($dtime, $row->snum);
                    $items[] = array($dtime, $row->snum, '510 Bt Batok St 22', $row->etype, $row->remarks);
                }
                //dpm($items);


                $block['content'] = theme('table', array('header' => $header, 'rows' => $items, 'attributes' => array('id' => 'list-events-table')));

            } // if user_access
            break;
        case 'sensor_status':
            $block['content']['#attached']['js'] = array(
                array(
                    'type' => 'file',
                    'data' => $mpath . '/jav.js',),
            );
            if (user_access('access content')) {
                $block = array
                (
                    'subject' => t('Sensor Status'),
                    'content' => array
                    (
                        'eventlist_block' => array
                        (
                            '#prefix' => "<div id='sensor_status'>",
                            '#suffux' => "</div>",
                            '#markup' => t("Sensor status....."),
                        ),
                    ),
                );
               
                $header = array(
                    //array('data' => t('Time'), 'field' => 'id', 'sort' => 'desc'),
                    //array('data' => t('Address'), 'colspan' => 3),
                    array('data' => t('Sensor Name')),
                    array('data' => t('Reported Time')),
                    array('data' => t('Status')),
                    array('data' => t('Remarks')),
                );

                $reqtype = 'ss';
                $filter = new stdClass(); // (object) [];
                $filter->start = -1;
                $filter->end = time() * 1000;
                $filter->sidList = $sid_list;
                //$filter->sidList = ['112233C'];
                //
                module_load_include("config.inc", "jav");
                $jav_db = getExtDBConfig();
                module_load_include("api.inc", "jav");
                $result = _getdata_exdb($jav_db, $reqtype, $filter);
                //dpm($result);
                date_default_timezone_set('Asia/Singapore');
                //
                $items = array();
                foreach ($result as $row) {
                    $date = new DateTime();
                    $date->setTimestamp(intval($row->ts)/1000);
                    $dtime = $date->format('j-M-y g:i a');
                    //print_r($dtime, $row->snum);
                    //$items[] = array($dtime, $row->name, $row->status, $row->details);
                    if($row->status != 'ok') {
                        $items[] = array($row->name, $dtime, $row->status, $row->details);
                    }
                }
                //dpm($items);

                $block['content'] = theme('table', array('header' => $header, 'rows' => $items, 'attributes' => array('id' => 'sensor-status-table')));

            } // if user_access
            break;
        case 'reports':
            $block['content']['#attached']['js'] = array(
                array(
                    'type' => 'file',
                    'data' => $mpath . '/jav_reports.js',),
            );
            if (user_access('access content')) {
                $block = array
                (
                    'subject' => t(''),
                    'content' => array
                    (
                        'eventlist_block' => array
                        (
                            '#prefix' => "<div id='reports'>",
                            '#suffux' => "</div>",
                            '#markup' => t("Reports....."),
                        ),
                    ),
                );

                $reqtype = 'rpt';
                $filter = new stdClass(); // (object) [];
                $filter->start = -1;
                $filter->end = time() * 1000;
                // Get all nids of type lifts.
                $node_type = "lifts";
                $nids = array();
                $zonelist = array();
/*
                $result_all = db_query("SELECT nid FROM node WHERE type = '%s' ", $node_type);
                while ($obj = db_fetch_object ($result)) {
                    $sid_list = $obj->nid;
                }
*/ 
                //$field = field_info_field('field_blk_zone');
                //dpm($field);
                //$allowed_values = list_allowed_values($field);
                //dpm($allowed_values);
                $nids = db_query("SELECT nid FROM {node} WHERE type = :type", array(':type' => $node_type))->fetchCol();
                foreach($nids as $nid) {
                    $node = node_load($nid);
                    //dpm($node);
                    $field_dev = field_get_items('node', $node, 'field_lift_id', 'en');
                    $sid = $field_dev[0]['safe_value'];
                    $sid_list[] = $sid;
                    
                    //$field_dev2 = field_get_items('node', $node, 'field_blk_zone', 'en');
                    //$uid = $field_dev2['target_id'];
                    //dpm($uids);
                    //$test = $node->get('tags')->referencedEntities();
                    $node_wrapper = entity_metadata_wrapper('node', $node);
                    $zone = $node_wrapper->field_blk_zone->value()->name;
                    $zonelist[$sid] = $zone;
                }
                
                $filter->sidList = $sid_list;
                //$filter->sidList = ['112233C'];
                //
                module_load_include("config.inc", "jav");
                $jav_db = getExtDBConfig();
                module_load_include("api.inc", "jav");
                $result = _getdata_exdb($jav_db, $reqtype, $filter);
                //dpm($result);
                date_default_timezone_set('Asia/Singapore');
                //
               
                $header = array(
                    //array('data' => t('Time'), 'field' => 'id', 'sort' => 'desc'),
                    //array('data' => t('Address'), 'colspan' => 3),
                    array('data' => t('Zone')),
                    array('data' => t('Lift ID')),
                    array('data' => t('Reported Date')),
                    array('data' => t('Time')),
                    array('data' => t('Status')),
                    array('data' => t('Remarks')),
                );

                $items = array();
                foreach ($result as $row) {
                    $date = new DateTime();
                    $date->setTimestamp(intval($row->ts)/1000);
                    //$dtime = $date->format('j-M-y g:i a');
                    //$dt = $date->format('j-M-y');
                    $dt = $date->format('d-m-Y');
                    $tt = $date->format('g:i a');
                    //print_r($dtime, $row->snum);
                    $zone = $zonelist[$row->snum];
                    $items[] = array($zone, $row->snum, $dt, $tt, $row->etype, $row->remarks);
                }
                //dpm($items);


                $block['content'] = theme('table', array('header' => $header, 'rows' => $items, 'attributes' => array('id' => 'reports-table')));

            } // if user_access
            break;
        case 'aob':
            if (user_access('access content')) {
                print_r("Unexpected switch");
            } // if user_access
            break;
    } // switch
    //libraries_info('moment');
    return $block;
}


function _jav_set_list($lift_list = NULL) {
  static $stored_lift_list = NULL;
  if ($lift_list) {
    $stored_lift_list = $lift_list;
  }
  return $stored_lift_list;
}


/*
* https://www.drupal.org/node/1993228
*/
function jav_preprocess_views_view(&$vars)
{
    $mpath = drupal_get_path('module', 'jav');
    //dpm($vars['view']);
    if ($vars['view']->name == 'dashboard' && $vars['view']->current_display == 'page') {
        $selected_devs = array();
        $dev_details = array();
        $selected_lifts = array();
        foreach ($vars['view']->result as $cnum => $cell) {
            //print_r($cell->node_title);
            //dpm($cell);
            $nid = $cell->nid;
            $vnum = -1;
            $sid_content = $cell->field_field_lift_id[0];
            $sid = $sid_content['raw']['value'];
            $lift_details = array(
                'sid' => $sid,
                'nid' => $nid,
                'vnum' => $vnum,
            );
            $selected_lifts[$sid] = $lift_details;
            //$active_sids[] = $sid_content['raw']['value'];
        }
        //print_r($visible_vehs);
        //dpm($active_sids);
        //$vars['dev_list'] = $selected_lifts;
        _jav_set_list($selected_lifts);
        //$lift_list = &drupal_static('jav');
        //$lift_list = $selected_lifts;
        drupal_add_js(array('rt' => array('dev_list' => $selected_lifts)), 'setting');
    }
}

/*
function jav_views_pre_render(&$view) {
    //dpm($view->field['field_event_ack']);
    if ($view->name == 'alerts' && isset($view->field['field_event_ack'])) {
        //dpm($view);
        $attributes = array('onclick' => "alert('Hello')");
        //print_r($attributes);
        $view->field['field_event_ack']->options['alter']['link_attributes'] = $attributes;
    }
}
*/
