apiVersion: v1
kind: Service
metadata:
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: "<arn:acm>"
    service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "443"
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: http
  name: nginx-ingress
  labels:
    app: nginx-ingress
spec:
  type: LoadBalancer
  ports:
    - name: "http"
      port: 80
      targetPort: 80
      protocol: TCP
    - name: "https"
      port: 443
      targetPort: 80
      protocol: "TCP"
  selector:
    app: nginx-ingress
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: nginx-ingress
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: nginx-ingress
    spec:
      containers:
      - name: nginx-ingress
        #image: gcr.io/google_containers/nginx-ingress-controller:0.8.3
        image: gcr.io/google_containers/nginx-ingress-controller:0.9.0-beta.15
        imagePullPolicy: Always
        readinessProbe:
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
        livenessProbe:
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 10
          timeoutSeconds: 1
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
                fieldPath: metadata.namespace
        ports:
        - containerPort: 80
          hostPort: 80
        args:
        - /nginx-ingress-controller
        - '--default-backend-service=$(POD_NAMESPACE)/default-http-backend'
        #- --publish-service=kube-system/nginx-service
        #- --configmap=kube-system/nginx-config
        #- --default-ssl-certificate=$(POD_NAMESPACE)/my-tls-certificate
        #- --apiserver-host=http://<YOUR_KUBERNETES_MASTER_ENDPOINT>:8080
